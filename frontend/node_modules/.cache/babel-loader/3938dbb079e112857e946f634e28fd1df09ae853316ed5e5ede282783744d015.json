{"ast":null,"code":"/** @preserve\n  * package: sweetalert2-react-content v4.2.0\n  * file: dist/sweetalert2-react-content.umd.js\n  * homepage: https://github.com/sweetalert2/sweetalert2-react-content#readme\n  * license: MIT\n  **/\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react'), require('react-dom')) : typeof define === 'function' && define.amd ? define(['react', 'react-dom'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.sweetalert2ReactContent = factory(global.React, global.ReactDOM));\n})(this, function (React, ReactDOM) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n  var ReactDOM__default = /*#__PURE__*/_interopDefaultLegacy(ReactDOM);\n  const mounts = [{\n    key: 'title',\n    getter: swal => swal.getTitle()\n  }, {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer()\n  }, {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton()\n  }, {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton()\n  }, {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton()\n  }, {\n    key: 'footer',\n    getter: swal => swal.getFooter()\n  }, {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton()\n  }, {\n    key: 'iconHtml',\n    getter: swal => swal.getIcon().querySelector('.swal2-icon-content')\n  }, {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader()\n  }];\n  const noop = () => {}; // eslint-disable-line @typescript-eslint/no-empty-function\n\n  function withReactContent(ParentSwal) {\n    /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n    and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n    function extractReactParams(params) {\n      const reactParams = {};\n      const otherParams = {};\n      const mountKeys = mounts.map(mount => mount.key);\n      Object.entries(params).forEach(_ref => {\n        let [key, value] = _ref;\n        if (mountKeys.includes(key) && /*#__PURE__*/React__default[\"default\"].isValidElement(value)) {\n          reactParams[key] = value;\n          otherParams[key] = ' ';\n        } else {\n          otherParams[key] = value;\n        }\n      });\n      return [reactParams, otherParams];\n    }\n    function render(swal, reactParams) {\n      Object.entries(reactParams).forEach(_ref2 => {\n        let [key, value] = _ref2;\n        const mount = mounts.find(mount => mount.key === key);\n        const domElement = mount.getter(ParentSwal);\n        ReactDOM__default[\"default\"].render(value, domElement);\n        swal.__mountedDomElements.push(domElement);\n      });\n    }\n    function unrender(swal) {\n      swal.__mountedDomElements.forEach(domElement => {\n        ReactDOM__default[\"default\"].unmountComponentAtNode(domElement);\n      });\n      swal.__mountedDomElements = [];\n    }\n    return class extends ParentSwal {\n      static argsToParams(args) {\n        if ( /*#__PURE__*/React__default[\"default\"].isValidElement(args[0]) || /*#__PURE__*/React__default[\"default\"].isValidElement(args[1])) {\n          const params = {};\n          ['title', 'html', 'icon'].forEach((name, index) => {\n            if (args[index] !== undefined) {\n              params[name] = args[index];\n            }\n          });\n          return params;\n        } else {\n          return ParentSwal.argsToParams(args);\n        }\n      }\n      _main(params, mixinParams) {\n        this.__mountedDomElements = [];\n        this.__params = Object.assign({}, mixinParams, params);\n        const [reactParams, otherParams] = extractReactParams(this.__params);\n        const superDidOpen = otherParams.didOpen || noop;\n        const superDidDestroy = otherParams.didDestroy || noop;\n        return super._main(Object.assign({}, otherParams, {\n          didOpen: popup => {\n            render(this, reactParams);\n            superDidOpen(popup);\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup);\n            unrender(this);\n          }\n        }));\n      }\n      update(params) {\n        Object.assign(this.__params, params);\n        unrender(this);\n        const [reactParams, otherParams] = extractReactParams(this.__params);\n        super.update(otherParams);\n        render(this, reactParams);\n      }\n    };\n  }\n  return withReactContent;\n});","map":{"version":3,"mappings":"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","names":["mounts","key","getter","swal","getTitle","getHtmlContainer","getConfirmButton","getDenyButton","getCancelButton","getFooter","getCloseButton","getIcon","querySelector","getLoader","noop","withReactContent","ParentSwal","extractReactParams","params","reactParams","otherParams","mountKeys","map","mount","Object","entries","forEach","value","includes","React","isValidElement","render","find","domElement","ReactDOM","__mountedDomElements","push","unrender","unmountComponentAtNode","argsToParams","args","name","index","undefined","_main","mixinParams","__params","assign","superDidOpen","didOpen","superDidDestroy","didDestroy","popup","update"],"sources":["C:\\Users\\vivek\\Documents\\VSem\\WebLab\\Movie_ticket_system_MERN\\frontend\\node_modules\\sweetalert2-react-content\\src\\mounts.js","C:\\Users\\vivek\\Documents\\VSem\\WebLab\\Movie_ticket_system_MERN\\frontend\\node_modules\\sweetalert2-react-content\\src\\index.js"],"sourcesContent":["export const mounts = [\n  {\n    key: 'title',\n    getter: swal => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: swal => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: swal => swal.getIcon().querySelector('.swal2-icon-content'),\n  },\n  {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent (ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams (params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map(mount => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n  function render (swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find(mount => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      ReactDOM.render(value, domElement)\n      swal.__mountedDomElements.push(domElement)\n    })\n  }\n\n  function unrender (swal) {\n    swal.__mountedDomElements.forEach(domElement => {\n      ReactDOM.unmountComponentAtNode(domElement)\n    })\n    swal.__mountedDomElements = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams (args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main (params, mixinParams) {\n      this.__mountedDomElements = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          didOpen: popup => {\n            render(this, reactParams)\n            superDidOpen(popup)\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        }),\n      )\n    }\n\n    update (params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}